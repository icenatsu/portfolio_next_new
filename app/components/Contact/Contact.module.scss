@use "../../styles//utils/functions.scss" as fct;
@use "../../styles/utils/variables.scss" as var;

.contact {
  display: flex;
  padding: 50px 200px 100px 200px;

  @media screen and (max-width: 1400px) {
    padding: 100px 100px 0px 100px;
  }

  @media screen and (max-width: var.$breakpoint-tablette) {
    flex-direction: column;
    padding: 100px 50px 30px 50px;
  }

  @media screen and (max-width: var.$breakpoint-mobile) {
    flex-direction: column;
    align-items: center;
  }

  .container-formulaire {
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    align-items: center;
    flex: 3;
    position: relative;

    @media screen and (max-width: var.$breakpoint-tablette) {
      justify-content: center;
      flex-direction: column;
    }

    .title {
      font-size: fct.map-deep-get(var.$contact, "fontSize", "title--desktop");
      font-weight: fct.map-deep-get(var.$contact, "fontWeight", "title");
      font-family: fct.map-deep-get(var.$contact, "fontFamily", "title");

      @media screen and (max-width: var.$breakpoint-tablette) {
        font-size: fct.map-deep-get(var.$contact, "fontSize", "title--tablet");
      }
    }

    .form__contact {
      position: relative;
      display: grid;
      grid-template-columns: repeat(2, 1fr);
      gap: 20px;
      grid-area: form-contact;
      grid-template-areas:
        "lastname firstname"
        "email tel"
        "entilted entilted"
        "message message"
        "send send";

      padding: 20px;
      border-radius: var.$radius--10;
      justify-items: center;
      align-items: center;
      // z-index: 1;
      width: 750px;

      @media screen and (max-width: var.$breakpoint-tablette) {
        width: 90%;
      }

      @media screen and (max-width: var.$breakpoint-mobile) {
        width: 100%;
        grid-template-columns: repeat(1, minmax(200px, 370px));
        grid-template-rows: 7fr;
        gap: 20px;
        grid-template-areas:
          "lastname"
          "firstname"
          "email"
          "tel"
          "entilted"
          "message"
          "send";
      }

      @mixin gridAreaLabels($gridAreaNames) {
        @for $i from 1 through length($gridAreaNames) {
          &:nth-child(#{$i}) {
            grid-area: nth($gridAreaNames, $i);
            width: 100%;
          }
        }
      }

      .label {
        display: flex;
        align-items: center;
        flex-direction: column;
        font-family: var(--font--archivo);
        font-size: fct.map-deep-get(var.$contact, "fontSize", "label--desktop");
        gap: 5px;

        @media screen and (max-width: var.$breakpoint-tablette) {
          font-size: fct.map-deep-get(
            var.$contact,
            "fontSize",
            "label--tablet"
          );
        }

        @include gridAreaLabels(
          (lastname, firstname, email, tel, entilted, message)
        );

        .errors {
          margin-bottom: 10px;
          margin-top: 5px;
          font-size: fct.map-deep-get(var.$contact, "fontSize", "errors");
          color: fct.map-deep-get(var.$contact, "colors", "errors");
          font-style: italic;
        }
      }

      .input {
        border-radius: var.$radius--10;
        width: 100%;
        height: 30px;
        padding: 20px;
        border: none;

        // &::placeholder {
        //   color: black;
        //   // opacity: 0.9;
        // }
      }

      .textarea {
        padding: 10px;
        resize: none;
        border-radius: var.$radius--10;
        width: 100%;
        border: none;
        height: 170px;
        margin-bottom: 10px;

        // &::placeholder {
        //   color: black;
        //   // opacity: 0.9;
        // }
      }

      .send {
        width: 30%;
        height: 40px;
        font-family: fct.map-deep-get(var.$contact, "fontFamily", "send");
        font-size: fct.map-deep-get(var.$contact, "fontSize", "send--desktop");
        border-radius: var.$radius--10;
        background-color: fct.map-deep-get(var.$contact, "colors", "send--bg");
        color: fct.map-deep-get(var.$contact, "colors", "send--desktop");
        margin-top: 10px;
        cursor: pointer;
        grid-area: send;

        @media screen and (max-width: var.$breakpoint-mobile) {
          font-size: fct.map-deep-get(var.$contact, "fontSize", "send--mobile");
        }
      }
    }
  }

  .elipse {
    position: absolute;
    z-index: -1;
    top: -60px;
    left: -30px;
    width: 200px;
    height: 650px;
    border-radius: 50%;
    transform: rotate(-30deg);

    @media screen and (max-width: var.$breakpoint-tablette) {
      display: none;
    }
  }

  .wave {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    overflow: hidden;
    line-height: 0;
    transform: rotate(180deg);
    opacity: 0.2;
  }

  .wave svg {
    position: relative;
    display: block;
    width: calc(100% + 1.3px);
    height: 90px;

    @media screen and (max-width: var.$breakpoint-tablette) {
      width: calc(100% + 1.3px);
      height: 70px;
    }

    @media screen and (max-width: var.$breakpoint-mobile) {
      width: calc(180% + 1.3px);
      height: 60px;
    }
  }

  &--dark {
    background-color: fct.map-deep-get(
      var.$contact--dark,
      "colors",
      "contact--bg"
    );

    .title {
      color: fct.map-deep-get(var.$contact--dark, "colors", "title");
    }

    .label {
      color: fct.map-deep-get(var.$contact--dark, "colors", "label");

      .errors {
        color: fct.map-deep-get(var.$contact--dark, "colors", "errors");
      }
    }

    .input {
      background-color: fct.map-deep-get(
        var.$contact--dark,
        "colors",
        "input--bg"
      );
    }

    .textarea {
      background-color: fct.map-deep-get(
        var.$contact--dark,
        "colors",
        "input--bg"
      );
    }

    .elipse {
      border: 1px solid fct.map-deep-get(var.$contact--dark, "colors", "elipse");
    }

    .wave .shape-fill {
      fill: fct.map-deep-get(var.$contact--dark, "colors", "wave");
    }
  }

  &--light {
    background-color: fct.map-deep-get(
      var.$contact--light,
      "colors",
      "contact--bg"
    );

    .title {
      color: fct.map-deep-get(var.$contact--light, "colors", "title");
    }

    .label {
      color: fct.map-deep-get(var.$contact--light, "colors", "label");

      .errors {
        color: fct.map-deep-get(var.$contact--light, "colors", "errors");
      }
    }

    .input {
      background-color: fct.map-deep-get(
        var.$contact--light,
        "colors",
        "input--bg"
      );
    }

    .textarea {
      background-color: fct.map-deep-get(
        var.$contact--light,
        "colors",
        "input--bg"
      );
    }

    .elipse {
      border: 1px solid
        fct.map-deep-get(var.$contact--light, "colors", "elipse");
    }

    .wave .shape-fill {
      fill: fct.map-deep-get(var.$contact--light, "colors", "wave");
    }
  }
}
