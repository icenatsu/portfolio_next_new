@use "../../styles/utils/functions.scss" as fct;
@use "../../styles/utils/variables.scss" as var;

.container {
  position: fixed;
  z-index: 4;
  width: 100vw;
  height: 60px;
  font-size: fct.map-deep-get(var.$navbar, "fontSize", "container");
  font-weight: fct.map-deep-get(var.$navbar, "fontWeight", "container");
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0 10px;
  transition: min-height 0.8s ease-in-out;

  @media screen and (max-width: var.$breakpoint-tablette) {
    padding-top: 10px;
    align-items: self-start;
  }

  .list {
    flex: 2;
    display: flex;
    justify-content: center;
    opacity: 1;
    font-size: fct.map-deep-get(var.$navbar, "fontSize", "list");

    @media screen and (max-width: var.$breakpoint-tablette) {
      flex: 10;
      width: 100vw;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      opacity: 0;
      transition: opacity 0.8s 1s ease;
      transform: translateY(80px);
    }

    &__item {
      padding: 0 20px;

      @media screen and (max-width: var.$breakpoint-tablette) {
        padding: 5px 0;
      }

      &:before {
        content: "\269D";
        margin-right: 10px;
      }

      &:hover {
        animation: wobble-horizontal 1s ease-in-out 1;
        transform: perspective(1px) translateZ(0);
      }
    }
  }

  .burger {
    display: none;
    font-size: 35px;
    padding: 5px 20px;

    @media screen and (max-width: var.$breakpoint-tablette) {
      display: block;
    }
  }

  &--dark {
    color: fct.map-deep-get(var.$navbar--dark, "colors", "container");
    background-color: fct.map-deep-get(
      var.$navbar--dark,
      "colors",
      "container--bg"
    );
    filter: drop-shadow(
      0px 3px 3px
        fct.map-deep-get(var.$navbar--dark, "colors", "container--filter")
    );

    .list {
      &__item {
        &:before {
          color: fct.map-deep-get(
            var.$navbar--dark,
            "colors",
            "list__item--before"
          );
        }
      }
    }

    @media screen and (max-width: var.$breakpoint-tablette) {
      color: fct.map-deep-get(var.$navbar--dark, "colors", "burger");
    }
  }

  &--light {
    color: fct.map-deep-get(var.$navbar--light, "colors", "container");
    background-color: fct.map-deep-get(
      var.$navbar--light,
      "colors",
      "container--bg"
    );
    filter: drop-shadow(
      0px 3px 3px
        fct.map-deep-get(var.$navbar--light, "colors", "container--filter")
    );

    .list {
      &__item {
        &:before {
          color: fct.map-deep-get(
            var.$navbar--light,
            "colors",
            "list__item--before"
          );
        }
      }
    }

    @media screen and (max-width: var.$breakpoint-tablette) {
      color: fct.map-deep-get(var.$navbar--light, "colors", "burger");
    }
  }
}

@keyframes wobble-horizontal {
  16.65% {
    transform: translateX(8px);
  }

  33.3% {
    transform: translateX(-6px);
  }

  49.95% {
    transform: translateX(4px);
  }

  66.6% {
    transform: translateX(-2px);
  }

  83.25% {
    transform: translateX(1px);
  }

  100% {
    transform: translateX(0);
  }
}
