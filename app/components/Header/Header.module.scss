@use "../../styles/utils/functions.scss" as fct;
@use "../../styles/utils/variables.scss" as var;

.header {
  height: 100vh;
  display: flex;
  padding: 15rem 20rem 7rem 20rem;
  justify-content: space-between;
  align-items: center;

  @media screen and (max-width: 1400px) {
    padding: 10rem 10rem;
  }

  @media screen and (max-width: var.$breakpoint-tablette) {
    padding: 10rem 10rem;
  }

  @media screen and (max-width: var.$breakpoint-mobile) {
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 3rem;
    height: 90rem;
    padding: 5rem 1rem;
  }

  .text {
    position: relative;
    flex: 2;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 5rem;

    @media screen and (max-width: var.$breakpoint-mobile) {
      align-items: center;
    }

    .profession {
      font-size: fct.map-deep-get(var.$header, "fontSize", "profession");
      font-family: fct.map-deep-get(var.$header, "fontFamily", "profession");
      border-radius: var.$radius--30;
      width: 20rem;
      padding: 1.5rem;
      display: flex;
      align-items: center;
      justify-content: center;
      z-index: 1;
      transition: filter 1s;
    }

    .title {
      display: flex;
      flex-wrap: wrap;
      font-family: fct.map-deep-get(var.$header, "fontFamily", "title");
      font-weight: fct.map-deep-get(var.$header, "fontWeight", "title");
      font-size: fct.map-deep-get(var.$header, "fontSize", "title--desktop");

      @media screen and (max-width: var.$breakpoint-tablette) {
        font-size: fct.map-deep-get(var.$header, "fontSize", "title--tablette");
      }

      @media screen and (max-width: var.$breakpoint-mobile) {
        text-align: center;
      }
    }

    .link {
      display: flex;
      flex-wrap: wrap;
      align-items: center;
      justify-content: center;
      z-index: 2;

      .button {
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: space-evenly;
        font-family: fct.map-deep-get(var.$header, "fontFamily", "button");
        font-size: fct.map-deep-get(var.$header, "fontSize", "button");
        font-weight: fct.map-deep-get(var.$header, "fontWeight", "button");
        border-radius: var.$radius--30;
        border: none;
        width: 19rem;
        height: 5.5rem;
        margin: 2rem 1rem;
        transition: filter 0.6s;

        &:hover {
          filter: brightness(110%);
        }

        .icon {
          font-size: fct.map-deep-get(var.$header, "fontSize", "button-icon");
        }
      }
    }
  }

  .wave {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    overflow: hidden;
    line-height: 0;
    transform: rotate(180deg);
    opacity: 0.2;

    @media screen and (max-width: var.$breakpoint-mobile) {
      display: none;
    }
  }

  .wave svg {
    position: relative;
    display: block;
    width: calc(100% + 0.13rem);
    height: 9rem;

    @media screen and (max-width: var.$breakpoint-tablette) {
      width: calc(100% + 0.13rem);
      height: 7rem;
    }

    // @media screen and (max-width: var.$breakpoint-mobile) {
    //   width: calc(180% + 0.13rem);
    //   height: 6rem;
    // }
  }

  &--dark {
    background-color: fct.map-deep-get(
      var.$header--dark,
      "colors",
      "header--bg"
    );

    .profession {
      color: fct.map-deep-get(var.$header--dark, "colors", "profession--color");
      border: 0.1rem solid
        fct.map-deep-get(var.$header--dark, "colors", "profession--border");

      &:hover {
        filter: brightness(160%);
      }
    }

    .title {
      color: fct.map-deep-get(var.$header--dark, "colors", "title");
    }

    .button {
      color: fct.map-deep-get(var.$header--dark, "colors", "button");
      background-color: fct.map-deep-get(
        var.$header--dark,
        "colors",
        "button--bg"
      );
    }

    .wave .shape-fill {
      fill: fct.map-deep-get(var.$header--dark, "colors", "wave");
    }
  }

  &--light {
    background-color: fct.map-deep-get(
      var.$header--light,
      "colors",
      "header--bg"
    );

    .profession {
      color: fct.map-deep-get(
        var.$header--light,
        "colors",
        "profession--color"
      );
      border: 0.1rem solid
        fct.map-deep-get(var.$header--light, "colors", "profession--border");
    }

    .title {
      color: fct.map-deep-get(var.$header--light, "colors", "title");
    }

    .button {
      color: fct.map-deep-get(var.$header--light, "colors", "button");
      background-color: fct.map-deep-get(
        var.$header--light,
        "colors",
        "button--bg"
      );
    }

    .wave .shape-fill {
      fill: fct.map-deep-get(var.$header--light, "colors", "wave");
    }
  }
}
