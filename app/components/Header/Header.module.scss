@use "../../styles/utils/functions.scss" as fct;
@use "../../styles/utils/variables.scss" as var;
@use "../../styles/utils/mixins.scss" as mix;

.header {
  height: 100vh;
  display: flex;
  padding: 150px 200px 70px 200px;
  justify-content: space-between;
  align-items: center;

  @media screen and (max-width: 1400px) {
    padding: 100px 100px;
  }

  @media screen and (max-width: var.$breakpoint-tablette) {
    padding: 100px 50px;
  }

  @media screen and (max-width: var.$breakpoint-mobile) {
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 30px;
  }

  .text {
    position: relative;
    flex: 2;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 50px;

    @media screen and (max-width: var.$breakpoint-mobile) {
      align-items: center;
    }

    .profession {
      font-size: fct.map-deep-get(var.$header, "fontSize", "profession");
      font-family: fct.map-deep-get(var.$header, "fontFamily", "profession");
      border-radius: var.$radius--30;
      width: 200px;
      padding: 15px;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .title {
      display: flex;
      font-family: var(--font--instrumentSerif);
      font-size: fct.map-deep-get(var.$header, "fontSize", "title--desktop");
      flex-wrap: wrap;

      @media screen and (max-width: var.$breakpoint-tablette) {
        font-size: fct.map-deep-get(var.$header, "fontSize", "title--tablette");
      }

      @media screen and (max-width: var.$breakpoint-mobile) {
        text-align: center;
      }
    }

    .link {
      display: flex;
      flex-wrap: wrap;
      align-items: center;
      justify-content: center;
      z-index: 2;

      button {
        display: flex;
        align-items: center;
        justify-content: center;
        font-family: fct.map-deep-get(var.$header, "fontFamily", "button");
        font-size: fct.map-deep-get(var.$header, "fontSize", "button");
        font-weight: bold;
        color: fct.map-deep-get(var.$header, "colors", "button");
        background-color: fct.map-deep-get(var.$header, "colors", "button--bg");
        border-radius: var.$radius--30;
        border: none;
        width: 190px;
        height: 55px;
        margin: 20px 10px;

        &:hover {
          filter: brightness(110%);
        }

        .icon {
          font-size: fct.map-deep-get(var.$header, "fontSize", "button-icon");
          margin-left: 20px;
        }

        & a {
          width: 100%;
          cursor: pointer;
        }
      }
    }
  }

  .wave {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    overflow: hidden;
    line-height: 0;
    transform: rotate(180deg);
    opacity: 0.2;
  }

  .wave svg {
    position: relative;
    display: block;
    width: calc(100% + 1.3px);
    height: 90px;

    @media screen and (max-width: var.$breakpoint-tablette) {
      width: calc(100% + 1.3px);
      height: 70px;
    }

    @media screen and (max-width: var.$breakpoint-mobile) {
      width: calc(180% + 1.3px);
      height: 60px;
    }
  }

  &--dark {
    background-color: fct.map-deep-get(
      var.$header--dark,
      "colors",
      "header--bg"
    );

    .title {
      color: fct.map-deep-get(var.$header--dark, "colors", "title");
    }

    .profession {
      color: fct.map-deep-get(var.$header--dark, "colors", "profession--color");
      border: 1px solid
        fct.map-deep-get(var.$header--dark, "colors", "profession--border");
    }

    .wave .shape-fill {
      fill: fct.map-deep-get(var.$header--dark, "colors", "wave");
    }
  }

  &--light {
    background-color: fct.map-deep-get(
      var.$header--light,
      "colors",
      "header--bg"
    );

    .title {
      color: fct.map-deep-get(var.$header--light, "colors", "title");
    }

    .profession {
      color: fct.map-deep-get(
        var.$header--light,
        "colors",
        "profession--color"
      );
      border: 1px solid
        fct.map-deep-get(var.$header--light, "colors", "profession--border");
    }

    .wave .shape-fill {
      fill: fct.map-deep-get(var.$header--light, "colors", "wave");
    }
  }
}
