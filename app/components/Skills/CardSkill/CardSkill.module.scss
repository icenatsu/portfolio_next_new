@charset "UTF-8";
@use "../../../styles/utils/functions.scss" as fct;
@use "../../../styles/utils/variables.scss" as var;

@mixin CardSkillStyle($class, $technos, $colors) {
  .#{$class} {
    position: relative;
    display: flex;
    flex-direction: column;
    overflow: hidden;
    width: 40rem;
    max-height: 8rem;
    transition: max-height 0.8s ease-in-out;
    border-radius: var.$radius--10;
    padding: 1rem;

    @media screen and (max-width: var.$breakpoint-tablette) {
      max-height: 7rem;
      width: 35.5rem;
    }

    @media screen and (max-width: var.$breakpoint-mobile) {
      width: 90%;
      margin: auto;
      max-height: 6.5rem;
    }

    .container {
      display: flex;
      padding-bottom: 0.5rem;
      align-items: center;
      justify-content: space-between;
      height: auto;

      .slideToBottom {
        font-size: 3rem;
        cursor: pointer;
      }

      &__icones {
        display: flex;
        align-items: center;

        @for $i from 1 through length($technos) {
          &:nth-child(#{$i}) {
            &::after {
              content: nth($technos, $i);
              padding-left: 0.5rem;
              padding-right: 1rem;
              font-size: fct.map-deep-get(
                var.$cardSkill,
                "fontSize",
                "nameTechno--desktop"
              );

              @media screen and (max-width: var.$breakpoint-tablette) {
                padding-left: 1.5rem;
                font-size: fct.map-deep-get(
                  var.$cardSkill,
                  "fontSize",
                  "nameTechno--tablet"
                );
              }

              @media screen and (max-width: var.$breakpoint-mobile) {
                font-size: fct.map-deep-get(
                  var.$cardSkill,
                  "fontSize",
                  "nameTechno--mobile"
                );
              }
            }
          }
        }

        .icone {
          padding: 0 0.5rem 0.5rem 0;
          font-size: fct.map-deep-get(
            var.$cardSkill,
            "fontSize",
            "iconTechno--desktop"
          );

          @media screen and (max-width: var.$breakpoint-tablette) {
            font-size: fct.map-deep-get(
              var.$cardSkill,
              "fontSize",
              "iconTechno--tablet"
            );
          }

          @media screen and (max-width: var.$breakpoint-mobile) {
            padding-left: 0.5rem;
            font-size: fct.map-deep-get(
              var.$cardSkill,
              "fontSize",
              "iconTechno--mobile"
            );
          }
        }
      }
    }

    .paragraphs {
      opacity: 0;
      transition: opacity 1s ease-in-out;
      font-size: fct.map-deep-get(
        var.$cardSkill,
        "fontSize",
        "descriptionTechno--tablet"
      );

      font-family: fct.map-deep-get(
        var.$cardSkill,
        "fontFamily",
        "descriptionTechno"
      );

      @media screen and (max-width: var.$breakpoint-mobile) {
        font-size: fct.map-deep-get(
          var.$cardSkill,
          "fontSize",
          "descriptionTechno--mobile"
        );
      }

      .tilt {
        z-index: -1;
        position: absolute;
        bottom: 0;
        left: 0;
        width: 100%;
        overflow: hidden;
        line-height: 0;
        transform: rotate(180deg);
        transition: opacity 0.5s ease-in-out;
      }

      .tilt svg {
        position: relative;
        display: block;
        width: calc(100% + 0.13rem);
        height: 8rem;
        transform: rotateY(180deg);
      }

      .tilt .tilt-fill {
        fill: #b6adad;
        opacity: 0.2;
      }
    }

    & p {
      padding-left: 0.5rem;

      &:first-of-type {
        padding: 1rem 0 0 0.5rem;
      }

      &::before {
        content: "\2BB1";
        padding-right: 0.5rem;
        font-size: fct.map-deep-get(var.$cardSkill, "fontSize", "iconArrow");
      }
    }

    &--dark {
      background-color: fct.map-deep-get(
        var.$cardSkill--dark,
        "colors",
        "techno--bg"
      );

      .paragraphs {
        color: fct.map-deep-get(
          var.$cardSkill--dark,
          "colors",
          "descriptionTechno"
        );
      }

      & p {
        &:first-of-type {
          border-top: 0.1rem solid
            fct.map-deep-get(var.$cardSkill--dark, "colors", "dividingBorder");
        }
        &::before {
          color: fct.map-deep-get(var.$cardSkill--dark, "colors", "iconArrow");
        }
      }

      .container {
        .slideToBottom {
          color: fct.map-deep-get(var.$cardSkill--dark, "colors", "chevron");
        }

        &__icones {
          @for $i from 1 through length($technos) {
            &:nth-child(#{$i}) {
              // color: nth($colors, $i);
              color: fct.map-deep-get(
                var.$cardSkill--dark,
                "colors",
                "iconTechno"
              );

              &::after {
                color: fct.map-deep-get(
                  var.$cardSkill--dark,
                  "colors",
                  "nameTechno"
                );
              }
            }
          }
        }
      }
    }

    &--light {
      // font-weight: 500;
      background-color: fct.map-deep-get(
        var.$cardSkill--light,
        "colors",
        "techno--bg"
      );

      .paragraphs {
        color: fct.map-deep-get(
          var.$cardSkill--light,
          "colors",
          "descriptionTechno"
        );
      }

      & p {
        &:first-of-type {
          border-top: 0.1rem solid
            fct.map-deep-get(var.$cardSkill--light, "colors", "dividingBorder");
        }
        &::before {
          color: fct.map-deep-get(var.$cardSkill--light, "colors", "iconArrow");
        }
      }

      .container {
        .slideToBottom {
          color: fct.map-deep-get(var.$cardSkill--light, "colors", "chevron");
        }

        &__icones {
          @for $i from 1 through length($technos) {
            &:nth-child(#{$i}) {
              color: fct.map-deep-get(
                var.$cardSkill--light,
                "colors",
                "iconTechno"
              );

              &::after {
                color: fct.map-deep-get(
                  var.$cardSkill--light,
                  "colors",
                  "nameTechno"
                );
              }
            }
          }
        }
      }
    }
  }
}

@include CardSkillStyle("html-css", ("html", "css"), (var.$html, var.$css));
@include CardSkillStyle("css", ("css", "sass"), (var.$css, var.$sass));
@include CardSkillStyle("github", ("Github"), var.$github);
@include CardSkillStyle("seo", ("SEO"), var.$seo);
@include CardSkillStyle("javascript", ("Javascript"), var.$javascript);
@include CardSkillStyle(
  "nodejs",
  ("Nodejs", "mongodb"),
  (var.$nodejs, var.$mongodb)
);
@include CardSkillStyle(
  "react",
  ("React", "nextjs"),
  (var.$react, var.$nextjs)
);
@include CardSkillStyle("typescript", ("Typescript"), var.$typescript);

.visible {
  max-height: 35rem;
}

.opacity {
  opacity: 1 !important;
}
